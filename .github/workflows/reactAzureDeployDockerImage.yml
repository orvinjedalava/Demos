name: ReactJS Docker Image CI to Azure Container Registry and Azure Container Apps

on:
  workflow_dispatch:

env:
  ACR_REPO: 'helloworldreact'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: Azure/login@v2.1.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        docker build -t ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ github.sha }} ./Docker/hello-world-react
        docker tag ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ github.sha }} ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:latest
        
    - name: Push Docker image to ACR
      run: |
        docker push ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ github.sha }}
        docker push ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:latest

    - name: Deploy to Azure Container Apps
      run: |
        az containerapp update \
          --name ${{ secrets.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --image ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:latest \
          --registry-server ${{ secrets.AZURE_ACR_LOGIN_SERVER }} \
          --ingress external \
          --target-port 80
        
